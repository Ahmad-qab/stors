% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/srchisq.R
\name{srchisq_optimize}
\alias{srchisq_optimize}
\title{Optimizing Chi-squared Distribution Grid}
\usage{
srchisq_optimize(
  df = NULL,
  xl = NULL,
  xr = NULL,
  steps = 4091,
  grid_range = NULL,
  theta = NULL,
  target_sample_size = 1000,
  verbose = FALSE
)
}
\arguments{
\item{df}{(optional) Numeric. degrees of freedom parameter of the Chi-squared Distribution. Defaults to \code{NULL}, which implies grid with \code{df = 2}.}

\item{xl}{Numeric. Left truncation bound for the target distribution. Defaults to \code{-Inf}, representing no left truncation.}

\item{xr}{Numeric. Right truncation bound for the target distribution. Defaults to \code{Inf}, representing no right truncation.}

\item{steps}{(optional) Integer. Desired number of steps in the proposal grid. Defaults to \code{NULL}, which means the number of steps is determined automatically during optimization.}

\item{grid_range}{(optional) Numeric vector. Specifies the range for optimizing the steps part of the proposal grid. Defaults to \code{NULL}, indicating automatic range selection.}

\item{theta}{(optional) Numeric. A parameter for grid optimization. Defaults to \code{NULL}.}

\item{target_sample_size}{(optional) Integer. Target sample size for grid optimization. Defaults to \code{1000}.}

\item{verbose}{Boolean. If \code{TRUE}, detailed optimization information, including areas and steps, will be displayed. Defaults to \code{FALSE}.}
}
\value{
The user does not need to store the returned value, because the package internally cashes the grid. However, we explain here the full returned grid for advanced users.

A list containing the optimized grid and related parameters for the specified built-in distribution:
\describe{
  \item{\code{grid_data}}{A data frame with detailed information about the grid steps, including:
  \describe{
    \item{\code{x}}{The start point of each step on the x-axis.}
    \item{\code{s_upper}}{The height of each step on the y-axis.}
    \item{\code{p_a}}{Pre-acceptance probability for each step.}
    \item{\code{s_upper_lower}}{A vector used to scale the uniform random number when the sample is accepted.}
  }}
  \item{\code{areas}}{A numeric vector containing the areas under:
  \describe{
    \item{\code{left_tail}}{The left tail bound.}
    \item{\code{steps}}{The middle steps.}
    \item{\code{right_tail}}{The right tail bound.}
  }}
  \item{\code{steps_number}}{An integer specifying the number of steps in the proposal.}
  \item{\code{sampling_probabilities}}{A numeric vector with:
  \describe{
    \item{\code{left_tail}}{The probability of sampling from the left tail.}
    \item{\code{left_and_middle}}{The combined probability of sampling from the left tail and middle steps.}
  }}
  \item{\code{unif_scaler}}{A numeric scalar, the inverse probability of sampling from the steps part of the proposal (\eqn{\frac{1}{p(lb < x < rb)}}). Used for scaling uniform random values.}
  \item{\code{lt_properties}}{A numeric vector of 5 values required for Adaptive Rejection Sampling (ARS) in the left tail.}
  \item{\code{rt_properties}}{A numeric vector of 6 values required for ARS in the right tail.}
  \item{\code{alpha}}{A numeric scalar representing the uniform step area.}
  \item{\code{tails_method}}{A string, either \code{"ARS"} (Adaptive Rejection Sampling) or \code{"IT"} (Inverse Transform), indicating the sampling method for the tails.}
  \item{\code{grid_bounds}}{A numeric vector specifying the left and right bounds of the target density.}
  \item{\code{cnum}}{An integer representing the cache number of the created grid in memory.}
  \item{\code{symmetric}}{A numeric scalar indicating the symmetry point of the grid, or \code{NULL} if not symmetric.}
  \item{\code{f_params}}{A list of parameters for the target density that the proposal grid is designed for.}
  \describe{
    \item{\code{df}}{ the df of the target distribution.}
  }
  \item{\code{is_symmetric}}{A logical value indicating whether the proposal grid is symmetric.}
  \item{\code{grid_type}}{A string indicating the type of the genedfd grid:
  \describe{
    \item{\code{"custom"}}{The grid is "custom" when \code{df} is provided. Custom grids are compatible with \code{\link{srchisq_custom}}.}
  }}
  \item{\code{target_function_area}}{A numeric scalar estimating the area of the target distribution.}
  \item{\code{dens_func}}{A string containing the hardcoded density function.}
  \item{\code{density_name}}{A string specifying the name of the target density distribution.}
  \item{\code{lock}}{An identifier used for saving and loading the grid from disk.}
}
}
\description{
The \code{srchisq_optimize()} function generates an optimized proposal grid for a targeted Chi-squared Distribution.
 The grid can be customized and adjusted based on various options provided by the user.
}
\details{
When \code{srchisq_optimize()} is explicitly called:
\itemize{
 \item A grid is created and cached. If no parameters are provided, a standard grid is created with \code{df = 2}.
 \item Providing \code{df} creates a custom grid, which is cached for use with \code{srchisq_custom()}.
 \item The optimization process can be controlled via parameters such as \code{steps}, \code{grid_range}, or
  \code{theta}. If no parameters are provided, the grid is optimized via brute force based on the.
  \code{target_sample_size}.
}
}
\examples{
# Genedf custom grid that with df = 2, that has 4096 steps
scalable_grid <- srchisq_optimize(steps = 4096)

# Genedf custom grid that with df = 4
scalable_grid <- srchisq_optimize(df = 4)

}
\seealso{
\code{\link{srchisq_custom}}: Function to sample from a custom grid genedfd by \code{srchisq_optimize()}.
}
